PVT Graph setup

TSK1
isa	task
name	VST

B
isa 	node
role  	key
name  	W
value 	nil
parent	TSK1

D
isa 	node
role	key
name	R
value	nil
parent	TSK1

F
isa 	node
role	screen
name	nil
value	nil
parent	TSK1

G
isa	node
role	target
name	nil
value	nil
parent	TSK1

H
isa	node
role	letter
name	nil
value	nil
parent	TSK1

I
isa	edge
role	isEquivalent
source	G
dest	H
parent 	TSK1

THE FOLLOWING MAY BE INCORRECT DUE TO ACE->DRS, UNSURE OFFHAND
I THINK J SHOULD DISAPPEAR AND K SHOULD HAVE SOURCE OF G
[
J
isa 	node
role	letter
name	nil
value 	nil
parent	TSK1

K
isa	edge
role	appear/appearOn
source	J
dest	F
parent	TSK1
]

L
isa	condition
subj	G
pred	isOn?
target	F
conseq	M,N
parent	TSK1

[
M
isa 	property
prop	pressed
parent	TSK1
]
OR 
[
M
isa	node
role	pressed
name	nil
value 	nil
parent	TSK1
]

# I know this is a different way of dealing with properties
# than what I did with PVT.  Putting in as an alternate option


N
isa	edge
role	is
source	B
dest	M
parent	TSK1


O
isa	condition
subj	G
pred	notOn?
target	F
cons	P,Q
parent	TSK1

# How to deal with "NOT"?

[
P
isa 	property
prop	pressed
parent	TSK1
]
OR 
[
P
isa	node
role	pressed
name	nil
value 	nil
parent	TSK1
]

Q
isa	edge
role	is
source	D
dest	P
parent	TSK1

"If the letter matches, then the color and identity of the letter
match" - may be backwards?  THis whoole bit seems off.
[
R
isa	node
role	letter
name	nil
value 	nil
parent	TSK1

S
isa	condition
subj	R
pred	match
target	G
cons	T,U,V,W,X,Y,Z,A1
]

T
isa	node
role	colorOfR (?) - this bit will need straightened out. 
	# How to add relations?
name	nil
value 	nil
parent	TSK1

# Value slot will probably be populated at runtime in color
# and identity nodes

U
isa	node
role	identityOfR?
name	nil
value 	nil
parent	TSK1

V
isa	node
role	colorOfG?
name	nil
value 	nil
parent	TSK1

X
isa	edge
role	isEqualTo?
source	T
dest	V
parent	TSK1

Y
isa	node
role	identityOfG
name	nil
value 	nil
parent	TSK1

A1
isa	edge
role	isEqualTo?
source	U
dest	Y
parent	TSK1

"All letters have a color and an identity" - may not need encoded?
# Also may not be done very well
[
B1
isa	condition
subj	role:Letter? (Basically: anything with the role letter)
pred	nil
target	nil
cons	C1,D1,E1,F1
parent	TSK1
]
OR
[
B1
isa	condition
subj	node
pred	hasRole
target	letter
cons	C1,D1,E1,F1
parent	TSK1
]

C1
isa	node
role	color
name	nil
value 	nil
parent	TSK1

D1
isa	edge
role	has
source	B1
dest	C1
parent	TSK1

E1
isa	node
role	identity
name	nil
value 	nil
parent	TSK1

F1
isa	edge
role	has
source	B1
dest	E1
parent	TSK1